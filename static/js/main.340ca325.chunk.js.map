{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","query","selected","findTask","event","setState","target","value","selectFilter","this","props","todos","selectUser","changeTodoStatus","filteredTodos","filter","todo","completed","title","includes","className","placeholder","onChange","map","type","checked","readOnly","onClick","userId","React","Component","getUser","fetch","then","response","json","CurrentUser","user","data","prevProps","clear","id","name","email","phone","App","selectedUserId","clearUser","task","prevState","newTask","ReactDOM","render","document","getElementById"],"mappings":"iVAIaA,G,kBAAb,4MACEC,MAAQ,CACNC,MAAO,GACPC,SAAU,OAHd,EAMEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEJ,MAAOG,EAAME,OAAOC,SAPxC,EAUEC,aAAe,SAACJ,GACd,EAAKC,SAAS,CAAEH,SAAUE,EAAME,OAAOC,SAX3C,uDAcY,IAAD,EACyCE,KAAKC,MAA7CC,EADD,EACCA,MAAOC,EADR,EACQA,WAAYC,EADpB,EACoBA,iBADpB,EAEqBJ,KAAKT,MAAzBC,EAFD,EAECA,MAAOC,EAFR,EAEQA,SACTY,EAAgBH,EACnBI,QAAO,SAACC,GACP,MAAiB,WAAbd,GACwB,IAAnBc,EAAKC,UAGG,cAAbf,GACwB,IAAnBc,EAAKC,UAGPD,KAERD,QAAO,SAAAC,GAAI,OAAIA,EAAKE,MAAMC,SAASlB,MAEtC,OACE,yBAAKmB,UAAU,YACb,sCAEA,yBAAKA,UAAU,4BACb,2BACEC,YAAY,OACZd,MAAON,EACPqB,SAAUb,KAAKN,WAEjB,4BACEI,MAAOL,EACPoB,SAAUb,KAAKD,cAEf,uCACA,0CACA,8CAEF,wBAAIY,UAAU,kBACXN,EAAcS,KAAI,SAAAP,GAAI,OACrB,wBACEI,UAAS,yCAAoCJ,EAAKC,UAC9C,UAAY,cAEhB,+BACE,2BACEO,KAAK,WACLC,QAAST,EAAKC,UACdS,UAAQ,EACRJ,SAAU,kBAAMT,EAAiBG,MAEnC,2BAAIA,EAAKE,QAEX,4BACEE,UAAU,iEAKVI,KAAK,SACLG,QAAS,kBAAMf,EAAWI,EAAKY,UAPjC,YAUGZ,EAAKY,mBA1ExB,GAA8BC,IAAMC,Y,MCI7B,SAASC,EAAQH,GACtB,OAAOI,MAAM,wCAAD,OAAyCJ,IAClDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCLxB,IAAMC,EAAb,4MACEpC,MAAQ,CACNqC,KAAM,IAFV,kEAKuB,IAAD,OAClBN,EAAQtB,KAAKC,MAAMkB,QAChBK,MAAK,SAAAI,GAAI,OAAI,EAAKhC,SAAS,CAAEgC,KAAMA,EAAKC,YAP/C,yCAUqBC,GAAY,IAAD,OACxBA,EAAUX,SAAWnB,KAAKC,MAAMkB,QAClCG,EAAQtB,KAAKC,MAAMkB,QAChBK,MAAK,SAAAI,GAAI,OAAI,EAAKhC,SAAS,CAAEgC,KAAMA,EAAKC,YAbjD,+BAiBY,IACAD,EAAS5B,KAAKT,MAAdqC,KACAG,EAAU/B,KAAKC,MAAf8B,MAER,OACE,yBAAKpB,UAAU,eACb,wBAAIA,UAAU,sBACZ,uDAAyBiB,EAAKI,MAGhC,wBAAIrB,UAAU,qBACXiB,EAAKK,MAER,uBAAGtB,UAAU,sBACViB,EAAKM,OAER,uBAAGvB,UAAU,sBACViB,EAAKO,OAER,4BACEpB,KAAK,SACLJ,UAAU,SACVO,QAASa,GAHX,cApCR,GAAiCX,IAAMC,WC2DxBe,E,4MAxDb7C,MAAQ,CACNW,MAAO,GACPmC,eAAgB,G,EASlBlC,WAAa,SAAC6B,GACZ,EAAKpC,SAAS,CAAEyC,eAAgBL,K,EAGlCM,UAAY,WACV,EAAK1C,SAAS,CAAEyC,eAAgB,K,EAGlCjC,iBAAmB,SAACmC,GAClB,EAAK3C,UAAS,SAAC4C,GACb,IAAMC,EAAUF,EAIhB,OAFAE,EAAQjC,WAAaiC,EAAQjC,UAEtB,CACLN,MAAM,YAAKsC,EAAUtC,Y,kEArBN,IAAD,OFTbqB,MAHU,wCAIdC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UEUxBF,MAAK,SAAAtB,GAAK,OACT,EAAKN,SAAS,CAAEM,MAAOA,EAAM2B,KAAKvB,QAAO,SAAAiC,GAAI,OAAIA,EAAK9B,gB,+BAuBlD,IAAD,EAC2BT,KAAKT,MAA/BW,EADD,EACCA,MAAOmC,EADR,EACQA,eAEf,OACE,yBAAK1B,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACET,MAAOA,EACPC,WAAYH,KAAKG,WACjBC,iBAAkBJ,KAAKI,oBAI3B,yBAAKO,UAAU,gBACb,yBAAKA,UAAU,0BACZ0B,EACC,kBAAC,EAAD,CAAalB,OAAQkB,EAAgBN,MAAO/B,KAAKsC,YAC/C,0B,GAjDElB,IAAMC,WCHxBqB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.340ca325.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropsType from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    selected: 'All',\n  }\n\n  findTask = (event) => {\n    this.setState({ query: event.target.value });\n  }\n\n  selectFilter = (event) => {\n    this.setState({ selected: event.target.value });\n  }\n\n  render() {\n    const { todos, selectUser, changeTodoStatus } = this.props;\n    const { query, selected } = this.state;\n    const filteredTodos = todos\n      .filter((todo) => {\n        if (selected === 'Active') {\n          return todo.completed === false;\n        }\n\n        if (selected === 'Completed') {\n          return todo.completed === true;\n        }\n\n        return todo;\n      })\n      .filter(todo => todo.title.includes(query));\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input\n            placeholder=\"Task\"\n            value={query}\n            onChange={this.findTask}\n          />\n          <select\n            value={selected}\n            onChange={this.selectFilter}\n          >\n            <option>All</option>\n            <option>Active</option>\n            <option>Completed</option>\n          </select>\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                className={`TodoList__item TodoList__item--${todo.completed\n                  ? 'checked' : 'unchecked'}`}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                    onChange={() => changeTodoStatus(todo)}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropsType.shape().isRequired,\n  selectUser: PropsType.number.isRequired,\n  changeTodoStatus: PropsType.func.isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL_todos = `https://mate-api.herokuapp.com/todos`;\n\nexport function getAllTodos() {\n  return fetch(API_URL_todos)\n    .then(response => response.json());\n}\n\nexport function getUser(userId) {\n  return fetch(`https://mate-api.herokuapp.com/users/${userId}`)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropsType from 'prop-types';\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then(user => this.setState({ user: user.data }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      getUser(this.props.userId)\n        .then(user => this.setState({ user: user.data }));\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clear } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${user.id}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">\n          {user.name}\n        </h3>\n        <p className=\"CurrentUser__email\">\n          {user.email}\n        </p>\n        <p className=\"CurrentUser__phone\">\n          {user.phone}\n        </p>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={clear}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropsType.number.isRequired,\n  clear: PropsType.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getAllTodos()\n      .then(todos => (\n        this.setState({ todos: todos.data.filter(task => task.title) })));\n  }\n\n  selectUser = (id) => {\n    this.setState({ selectedUserId: id });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  changeTodoStatus = (task) => {\n    this.setState((prevState) => {\n      const newTask = task;\n\n      newTask.completed = !newTask.completed;\n\n      return {\n        todos: [...prevState.todos],\n      };\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            changeTodoStatus={this.changeTodoStatus}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} clear={this.clearUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}