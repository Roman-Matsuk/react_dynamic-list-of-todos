{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","checked","query","handleChange","setState","prevState","findTask","event","target","value","props","filter","this","todos","selectUser","className","placeholder","onChange","map","todo","completed","type","readOnly","title","onClick","userId","React","Component","getUser","fetch","then","response","json","CurrentUser","user","data","prevProps","clear","id","name","email","phone","App","selectedUserId","clearUser","filterTask","task","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c81c6fa.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropsType from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    checked: false,\n    query: '',\n  }\n\n  handleChange = () => {\n    this.setState(prevState => ({\n      checked: !prevState.checked,\n    }));\n  }\n\n  findTask = (event) => {\n    this.setState({ query: event.target.value });\n    this.props.filter(event.target.value);\n  }\n\n  render() {\n    const { todos, selectUser } = this.props;\n    const { query } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input placeholder=\"Task\" value={query} onChange={this.findTask} />\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <li\n                className={`TodoList__item TodoList__item--${todo.completed\n                  ? 'checked' : 'unchecked'}`}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                    onChange={() => {}}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropsType.shape().isRequired,\n  selectUser: PropsType.number.isRequired,\n  filter: PropsType.func.isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL_todos = `https://mate-api.herokuapp.com/todos`;\n\nexport function getAllTodos() {\n  return fetch(API_URL_todos)\n    .then(response => response.json());\n}\n\nexport function getUser(userId) {\n  return fetch(`https://mate-api.herokuapp.com/users/${userId}`)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropsType from 'prop-types';\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then(user => this.setState({ user: user.data }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      getUser(this.props.userId)\n        .then(user => this.setState({ user: user.data }));\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clear } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${user.id}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">\n          {user.name}\n        </h3>\n        <p className=\"CurrentUser__email\">\n          {user.email}\n        </p>\n        <p className=\"CurrentUser__phone\">\n          {user.phone}\n        </p>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={clear}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropsType.number.isRequired,\n  clear: PropsType.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getAllTodos()\n      .then(todos => (\n        this.setState({ todos: todos.data.filter(task => task.title) })));\n  }\n\n  selectUser = (id) => {\n    this.setState({ selectedUserId: id });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  filterTask = (query) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(task => task.title.includes(query)),\n    }));\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            filter={this.filterTask}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} clear={this.clearUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}